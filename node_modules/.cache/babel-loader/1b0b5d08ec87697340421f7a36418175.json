{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { SVGInjector } from '@tanem/svg-injector';\nimport { func, oneOf, oneOfType, object, string, bool } from 'prop-types';\nimport { createElement, Component } from 'react';\nimport ReactDOMServer from 'react-dom/server'; // Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\n\nvar shallowDiffers = function shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n\n  for (var _i in b) {\n    if (a[_i] !== b[_i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar ReactSVG =\n/** @class */\nfunction () {\n  var ReactSVG = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(ReactSVG, _React$Component);\n\n    function ReactSVG() {\n      var _this;\n\n      _this = _React$Component.apply(this, arguments) || this;\n      _this.initialState = {\n        hasError: false,\n        isLoading: true\n      };\n      _this.state = _this.initialState;\n      _this._isMounted = false;\n\n      _this.refCallback = function (container) {\n        _this.container = container;\n      };\n\n      return _this;\n    }\n\n    var _proto = ReactSVG.prototype;\n\n    _proto.renderSVG = function renderSVG() {\n      var _this2 = this;\n      /* istanbul ignore else */\n\n\n      if (this.container instanceof Node) {\n        var _this$props = this.props,\n            beforeInjection = _this$props.beforeInjection,\n            evalScripts = _this$props.evalScripts,\n            renumerateIRIElements = _this$props.renumerateIRIElements,\n            src = _this$props.src;\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n        var afterInjection = this.props.afterInjection;\n        var Wrapper = this.props.wrapper;\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n        var wrapper = document.createElement(Wrapper);\n        wrapper.innerHTML = ReactDOMServer.renderToStaticMarkup(createElement(Wrapper, null, createElement(Wrapper, {\n          \"data-src\": src\n        })));\n        this.svgWrapper = this.container.appendChild(wrapper.firstChild);\n\n        var afterEach = function afterEach(error, svg) {\n          if (error) {\n            _this2.removeSVG();\n          } // TODO: It'd be better to cleanly unsubscribe from SVGInjector\n          // callbacks instead of tracking a property like this.\n\n\n          if (_this2._isMounted) {\n            _this2.setState(function () {\n              return {\n                hasError: !!error,\n                isLoading: false\n              };\n            }, function () {\n              afterInjection(error, svg);\n            });\n          }\n        };\n\n        SVGInjector(this.svgWrapper.firstChild, {\n          afterEach: afterEach,\n          beforeEach: beforeInjection,\n          evalScripts: evalScripts,\n          renumerateIRIElements: renumerateIRIElements\n        });\n      }\n    };\n\n    _proto.removeSVG = function removeSVG() {\n      if (this.container instanceof Node && this.svgWrapper instanceof Node) {\n        this.container.removeChild(this.svgWrapper);\n        this.svgWrapper = null;\n      }\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      this._isMounted = true;\n      this.renderSVG();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (shallowDiffers(prevProps, this.props)) {\n        this.setState(function () {\n          return _this3.initialState;\n        }, function () {\n          _this3.removeSVG();\n\n          _this3.renderSVG();\n        });\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._isMounted = false;\n      this.removeSVG();\n    };\n\n    _proto.render = function render() {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _this$props2 = this.props,\n          afterInjection = _this$props2.afterInjection,\n          beforeInjection = _this$props2.beforeInjection,\n          evalScripts = _this$props2.evalScripts,\n          Fallback = _this$props2.fallback,\n          Loading = _this$props2.loading,\n          renumerateIRIElements = _this$props2.renumerateIRIElements,\n          src = _this$props2.src,\n          wrapper = _this$props2.wrapper,\n          rest = _objectWithoutPropertiesLoose(_this$props2, [\"afterInjection\", \"beforeInjection\", \"evalScripts\", \"fallback\", \"loading\", \"renumerateIRIElements\", \"src\", \"wrapper\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n      var Wrapper = wrapper;\n      return createElement(Wrapper, Object.assign({}, rest, {\n        ref: this.refCallback\n      }), this.state.isLoading && Loading && createElement(Loading, null), this.state.hasError && Fallback && createElement(Fallback, null));\n    };\n\n    return ReactSVG;\n  }(Component);\n\n  ReactSVG.defaultProps = {\n    afterInjection: function afterInjection() {\n      return undefined;\n    },\n    beforeInjection: function beforeInjection() {\n      return undefined;\n    },\n    evalScripts: 'never',\n    fallback: null,\n    loading: null,\n    renumerateIRIElements: true,\n    wrapper: 'div'\n  };\n  ReactSVG.propTypes = {\n    afterInjection: func,\n    beforeInjection: func,\n    evalScripts: oneOf(['always', 'once', 'never']),\n    fallback: oneOfType([func, object, string]),\n    loading: oneOfType([func, object, string]),\n    renumerateIRIElements: bool,\n    src: string.isRequired,\n    wrapper: oneOf(['div', 'span'])\n  };\n  return ReactSVG;\n}();\n\nexport { ReactSVG };","map":{"version":3,"sources":["../compiled/shallow-differs.js","../compiled/ReactSVG.js"],"names":["shallowDiffers","i","a","b","ReactSVG","hasError","isLoading","renderSVG","beforeInjection","evalScripts","renumerateIRIElements","src","afterInjection","Wrapper","wrapper","document","afterEach","SVGInjector","beforeEach","removeSVG","componentDidMount","componentDidUpdate","componentWillUnmount","render","Fallback","Loading","rest","ref","refCallback","React","fallback","loading","PropTypes"],"mappings":"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","sourcesContent":["// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\nconst shallowDiffers = (a, b) => {\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n};\nexport default shallowDiffers;\n","import { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport shallowDiffers from './shallow-differs';\nlet ReactSVG = /** @class */ (() => {\n    class ReactSVG extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.initialState = {\n                hasError: false,\n                isLoading: true,\n            };\n            this.state = this.initialState;\n            this._isMounted = false;\n            this.refCallback = (container) => {\n                this.container = container;\n            };\n        }\n        renderSVG() {\n            /* istanbul ignore else */\n            if (this.container instanceof Node) {\n                const { beforeInjection, evalScripts, renumerateIRIElements, src, } = this.props;\n                /* eslint-disable @typescript-eslint/no-non-null-assertion */\n                const afterInjection = this.props.afterInjection;\n                const Wrapper = this.props.wrapper;\n                /* eslint-enable @typescript-eslint/no-non-null-assertion */\n                const wrapper = document.createElement(Wrapper);\n                wrapper.innerHTML = ReactDOMServer.renderToStaticMarkup(React.createElement(Wrapper, null,\n                    React.createElement(Wrapper, { \"data-src\": src })));\n                this.svgWrapper = this.container.appendChild(wrapper.firstChild);\n                const afterEach = (error, svg) => {\n                    if (error) {\n                        this.removeSVG();\n                    }\n                    // TODO: It'd be better to cleanly unsubscribe from SVGInjector\n                    // callbacks instead of tracking a property like this.\n                    if (this._isMounted) {\n                        this.setState(() => ({\n                            hasError: !!error,\n                            isLoading: false,\n                        }), () => {\n                            afterInjection(error, svg);\n                        });\n                    }\n                };\n                SVGInjector(this.svgWrapper.firstChild, {\n                    afterEach,\n                    beforeEach: beforeInjection,\n                    evalScripts,\n                    renumerateIRIElements,\n                });\n            }\n        }\n        removeSVG() {\n            if (this.container instanceof Node && this.svgWrapper instanceof Node) {\n                this.container.removeChild(this.svgWrapper);\n                this.svgWrapper = null;\n            }\n        }\n        componentDidMount() {\n            this._isMounted = true;\n            this.renderSVG();\n        }\n        componentDidUpdate(prevProps) {\n            if (shallowDiffers(prevProps, this.props)) {\n                this.setState(() => this.initialState, () => {\n                    this.removeSVG();\n                    this.renderSVG();\n                });\n            }\n        }\n        componentWillUnmount() {\n            this._isMounted = false;\n            this.removeSVG();\n        }\n        render() {\n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            const { afterInjection, beforeInjection, evalScripts, fallback: Fallback, loading: Loading, renumerateIRIElements, src, wrapper, ...rest } = this.props;\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const Wrapper = wrapper;\n            return (React.createElement(Wrapper, Object.assign({}, rest, { ref: this.refCallback }),\n                this.state.isLoading && Loading && React.createElement(Loading, null),\n                this.state.hasError && Fallback && React.createElement(Fallback, null)));\n        }\n    }\n    ReactSVG.defaultProps = {\n        afterInjection: () => undefined,\n        beforeInjection: () => undefined,\n        evalScripts: 'never',\n        fallback: null,\n        loading: null,\n        renumerateIRIElements: true,\n        wrapper: 'div',\n    };\n    ReactSVG.propTypes = {\n        afterInjection: PropTypes.func,\n        beforeInjection: PropTypes.func,\n        evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n        fallback: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        loading: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        renumerateIRIElements: PropTypes.bool,\n        src: PropTypes.string.isRequired,\n        wrapper: PropTypes.oneOf(['div', 'span']),\n    };\n    return ReactSVG;\n})();\nexport { ReactSVG };\n"]},"metadata":{},"sourceType":"module"}